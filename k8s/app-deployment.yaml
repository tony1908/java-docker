apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  namespace: java-app
  labels:
    app: app
  annotations:
    deployment.kubernetes.io/revision: "1"
    app.version: "v1.0"
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%        # Double the pods during update (blue-green effect)
      maxUnavailable: 0     # Keep all current pods running until new ones are ready
  selector:
    matchLabels:
      app: app
  template:
    metadata:
      labels:
        app: app
    spec:
      containers:
        - name: app
          image: toony1908/java-mariadb-app
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: 100m
              memory: 256Mi
            limits:
              cpu: 500m
              memory: 512Mi
          #envFrom:
          #  - configMapRef:
          #      name: app-config
          #  - secretRef:
          #      name: app-secret
          env:
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_HOST
            - name: DB_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_PORT
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: DB_PASSWORD
            - name: KAFKA_BOOTSTRAP_SERVERS
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: KAFKA_BOOTSTRAP_SERVERS
          # Health checks for safer blue-green deployments
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 2

---
apiVersion: v1
kind: Service
metadata:
  name: app-service
  namespace: java-app
spec:
  selector:
    app: app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app-ingress
  namespace: java-app
spec:
  rules:
    - host: java-app.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: app-service
                port:
                  number: 8080

---
# ConfigMap to track deployment versions
apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-tracker
  namespace: java-app
data:
  current-version: "v1.0"
  previous-version: "none"
  deployment-strategy: "simple-blue-green"
  last-deployment: "initial"
